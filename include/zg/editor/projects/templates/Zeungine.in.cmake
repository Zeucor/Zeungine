if(CMAKE_BUILD_TYPE STREQUAL "")
    set(CMAKE_BUILD_TYPE "Debug")
endif()
if(UNIX)
    find_path(ZG_RUNTIME_HEADER_DIR NAMES Runtime.hpp PATHS /usr/local/include/zg/zg)
    if(APPLE)
        set(LIBRARY_SUFFIX ".dylib")
    else()
        set(LIBRARY_SUFFIX ".so")
    endif()
    find_file(ZG_LIBRARY NAMES libzeungine${LIBRARY_SUFFIX} PATHS /usr/local/lib/zg/${CMAKE_BUILD_TYPE})
elseif(WIN32)
    find_path(ZG_RUNTIME_HEADER_DIR NAMES Runtime.hpp PATHS "C:\Program Files\Zeungine\include\zg")
    find_file(ZG_LIBRARY NAMES zeungine.dll PATHS "C:\Program Files\Zeungine\${CMAKE_BUILD_TYPE}")
endif()
if(ZG_RUNTIME_HEADER_DIR)
    get_filename_component(ZG_INCLUDE_DIR ${ZG_RUNTIME_HEADER_DIR} DIRECTORY)
    message(STATUS "Found Zeungine include directory: ${ZG_INCLUDE_DIR}")
else()
    message(FATAL_ERROR "Zeungine include directory not found!")
endif()
include_directories(${ZG_INCLUDE_DIR})
if(NOT ZG_LIBRARY MATCHES "ZG_LIBRARY-NOTFOUND")
    message(STATUS "Found Zeungine library: ${ZG_LIBRARY}")
    target_link_libraries(${LIBRARY_NAME} PUBLIC ${ZG_LIBRARY})
else()
    message(STATUS "Could not find Zeungine library! Is Zeungine installed?")
endif()